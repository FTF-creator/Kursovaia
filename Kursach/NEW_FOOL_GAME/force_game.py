import tkinter as tk
from tkinter import messagebox
import random
import os
import sys
from PIL import Image, ImageTk

print("=== –°–ò–õ–û–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê - –û–ë–•–û–î –ö–≠–®–ê ===")

class ForceGame:
    def __init__(self, root):
        self.root = root
        self.root.title("–î–£–†–ê–ö - –°–ò–õ–û–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê")
        self.root.geometry("900x600")
        self.root.configure(bg='darkgreen')
        
        # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –¢–ï–ö–°–¢–£–†
        self.textures = {}
        self.card_images = {}  # –û–¢–î–ï–õ–¨–ù–´–ô –°–õ–û–í–ê–†–¨ –î–õ–Ø –ö–ê–†–¢
        self.card_width = 122
        self.card_height = 172
        
        print("üîÑ –°–ò–õ–û–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ò–ó cards...")
        self._force_load_textures("cards")
        
        # –ò–≥—Ä–æ–∫–∏
        self.players = [
            {'name': '–ò–≥—Ä–æ–∫', 'cards': [], 'human': True},
            {'name': '–ë–æ—Ç', 'cards': [], 'human': False}
        ]
        
        # –ö–æ–ª–æ–¥–∞
        self.deck = self._create_deck()
        random.shuffle(self.deck)
        
        # –ò–≥—Ä–∞
        self.table = []
        self.attacker = 0
        self.defender = 1
        self.trump = self.deck[0]['suit'] if self.deck else '‚ô•'  # –ò–°–ü–†–ê–í–õ–ï–ù–û
        self.game_over = False
        
        self.card_widgets = []
        self._create_ui()
        self._deal_cards()
        self._update_display()
    
    def _force_load_textures(self, cards_dir):
        """–ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ –∫—ç—à–∞"""
        if not os.path.exists(cards_dir):
            print(f"‚ùå –ü–∞–ø–∫–∏ {cards_dir} –Ω–µ—Ç!")
            return
        
        files = os.listdir(cards_dir)
        print(f"üìÅ –§–∞–π–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(files)}")
        
        # –û–ß–ò–°–¢–ö–ê –ü–†–ï–î–´–î–£–©–ò–• –¢–ï–ö–°–¢–£–†
        self.card_images.clear()
        
        # –ó–ê–ì–†–£–ó–ö–ê –ö–ê–ñ–î–û–ì–û –§–ê–ô–õ–ê –° –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ú –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï–ú
        for filename in files:
            if filename.endswith('.png'):
                filepath = os.path.join(cards_dir, filename)
                try:
                    # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–¢–ö–†–´–¢–ò–ï –ò –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï
                    with open(filepath, 'rb') as f:
                        img_data = f.read()
                    
                    # –°–û–ó–î–ê–ï–ú –ò–ó –î–ê–ù–ù–´–• –ó–ê–ù–û–í–û
                    import io
                    img = Image.open(io.BytesIO(img_data))
                    img = img.resize((self.card_width, self.card_height), Image.LANCZOS)
                    
                    # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –°–û–ó–î–ê–ù–ò–ï PhotoImage
                    photo_img = ImageTk.PhotoImage(img)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º —Ñ–∞–π–ª–∞
                    self.card_images[filename] = photo_img
                    print(f"‚úÖ –°–ò–õ–û–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê: {filename}")
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ {filename}: {e}")
        
        print(f"üéØ –ó–ê–ì–†–£–ñ–ï–ù–û –¢–ï–ö–°–¢–£–†: {len(self.card_images)}")
        
        # –ü–æ–∫–∞–∂–µ–º —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
        print("üìã –ó–ê–ì–†–£–ñ–ï–ù–ù–´–ï –¢–ï–ö–°–¢–£–†–´:")
        for name in sorted(self.card_images.keys()):
            print(f"   {name}")
    
    def _create_deck(self):
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ª–æ–¥—É"""
        suits = ['hearts', 'diamonds', 'clubs', 'spades']  # –ò–°–ü–†–ê–í–õ–ï–ù–û
        ranks = ['6', '7', '8', '9', '10', 'jack', 'queen', 'king', 'ace']
        
        deck = []
        for suit in suits:
            for rank in ranks:
                deck.append({'rank': rank, 'suit': suit})
        return deck
    
    def _create_ui(self):
        """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
        # –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å
        top = tk.Frame(self.root, bg='darkgreen', height=80)
        top.pack(fill=tk.X, padx=10, pady=5)
        
        self.status_label = tk.Label(top, text="–°–ò–õ–û–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê - –ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è", 
                                   font=('Arial', 14, 'bold'), bg='darkgreen', fg='white')
        self.status_label.pack(pady=5)
        
        # –°—Ç–æ–ª
        middle = tk.Frame(self.root, bg='darkgreen', height=200)
        middle.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        
        self.table_canvas = tk.Canvas(middle, bg='green', height=150)
        self.table_canvas.pack(fill=tk.BOTH, expand=True)
        
        # –ö–∞—Ä—Ç—ã –∏–≥—Ä–æ–∫–∞
        bottom = tk.Frame(self.root, bg='darkgreen', height=150)
        bottom.pack(fill=tk.X, padx=10, pady=5)
        
        tk.Label(bottom, text="–í–ê–®–ò –ö–ê–†–¢–´ (—Å–∏–ª–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞):", 
                font=('Arial', 12, 'bold'), bg='darkgreen', fg='white').pack()
        
        self.cards_frame = tk.Frame(bottom, bg='darkgreen')
        self.cards_frame.pack(pady=5)
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
        test_btn = tk.Button(self.root, text="–¢–ï–°–¢: –ü–æ–∫–∞–∑–∞—Ç—å 6_hearts.png", 
                           command=self._test_texture, font=('Arial', 12))
        test_btn.pack(pady=5)
    
    def _test_texture(self):
        """–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç—É—Ä—ã"""
        test_window = tk.Toplevel(self.root)
        test_window.title("–¢–ï–°–¢ –¢–ï–ö–°–¢–£–†–´")
        test_window.geometry("200x250")
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–∫–∞–∑–∞—Ç—å 6_hearts.png
        if '6_hearts.png' in self.card_images:
            test_label = tk.Label(test_window, image=self.card_images['6_hearts.png'])
            test_label.pack(pady=10)
            tk.Label(test_window, text="–≠—Ç–æ –î–û–õ–ñ–ù–ê –±—ã—Ç—å\n–≤–∞—à–∞ —Ç–µ–∫—Å—Ç—É—Ä–∞ 6‚ô•", 
                    font=('Arial', 10), justify=tk.CENTER).pack()
            
            # –°–æ—Ö—Ä–∞–Ω–∏–º —Å—Å—ã–ª–∫—É —á—Ç–æ–±—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–∏–ª–æ—Å—å
            test_window.test_image = self.card_images['6_hearts.png']
        else:
            tk.Label(test_window, text="‚ùå 6_hearts.png –Ω–µ –Ω–∞–π–¥–µ–Ω", 
                    font=('Arial', 12)).pack()
    
    def _deal_cards(self):
        """–†–∞–∑–¥–∞—á–∞ –∫–∞—Ä—Ç"""
        for player in self.players:
            player['cards'] = []
            for _ in range(6):
                if self.deck:
                    player['cards'].append(self.deck.pop())
    
    def _update_display(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–∞—Ä—Ç—ã
        for widget in self.card_widgets:
            widget.destroy()
        self.card_widgets = []
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç—ã –∏–≥—Ä–æ–∫–∞
        human = self.players[0]
        for card in human['cards']:
            card_frame = tk.Frame(self.cards_frame, relief=tk.RAISED, borderwidth=2, bg='white')
            card_frame.pack_propagate(False)
            
            card_canvas = tk.Canvas(card_frame, width=122, height=172, 
                                  bg='white', highlightthickness=0)
            card_canvas.pack(fill=tk.BOTH, expand=True)
            
            # –ò–º—è —Ñ–∞–π–ª–∞ —Ç–µ–∫—Å—Ç—É—Ä—ã
            filename = f"{card['rank']}_{card['suit']}.png"
            
            if filename in self.card_images:
                # –ò–°–ü–û–õ–¨–ó–£–ï–ú –ó–ê–ì–†–£–ñ–ï–ù–ù–£–Æ –¢–ï–ö–°–¢–£–†–£
                card_canvas.create_image(61, 86, image=self.card_images[filename])
                print(f"üé¥ –û–¢–û–ë–†–ê–ñ–ê–ï–ú: {filename}")
            else:
                # –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
                suit_symbol = {'hearts': '‚ô•', 'diamonds': '‚ô¶', 'clubs': '‚ô£', 'spades': '‚ô†'}
                color = 'red' if card['suit'] in ['hearts', 'diamonds'] else 'black'
                symbol = suit_symbol.get(card['suit'], '?')
                
                card_canvas.create_rectangle(5, 5, 117, 167, fill='white', outline='black', width=2)
                card_canvas.create_text(61, 86, text=f"{card['rank']}{symbol}", 
                                      font=('Arial', 14), fill=color)
                print(f"‚ùå –¢–ï–ö–°–¢–£–†–ê –ù–ï –ù–ê–ô–î–ï–ù–ê: {filename}")
            
            card_frame.pack(side=tk.LEFT, padx=2)
            self.card_widgets.append(card_frame)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        attacker_name = self.players[self.attacker]['name']
        defender_name = self.players[self.defender]['name']
        self.status_label.config(text=f"–ê—Ç–∞–∫—É–µ—Ç: {attacker_name} | –ó–∞—â–∏—â–∞–µ—Ç—Å—è: {defender_name} | –¢–µ–∫—Å—Ç—É—Ä—ã: {len(self.card_images)}")

# –ó–ê–ü–£–°–ö
if __name__ == "__main__":
    print("–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–∞–ø–∫–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è: cards")
    root = tk.Tk()
    game = ForceGame(root)
    root.mainloop()