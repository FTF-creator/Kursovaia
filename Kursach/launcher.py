# launcher.py
import tkinter as tk
from tkinter import ttk
import subprocess
import sys
import os
import time
import random

class LoadingScreen:
    def __init__(self, root):
        self.root = root
        self.root.title("–î—É—Ä–∞–∫ - –ó–∞–≥—Ä—É–∑–∫–∞")
        self.root.geometry("600x400")
        self.root.configure(bg='#000000')
        self.root.resizable(False, False)
        self.root.overrideredirect(True)  # –£–±–∏—Ä–∞–µ–º —Ä–∞–º–∫—É –æ–∫–Ω–∞
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
        self.center_window()
        
        self.create_loading_screen()

    def center_window(self):
        """–¶–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç –æ–∫–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ"""
        self.root.update_idletasks()
        width = 600
        height = 400
        x = (self.root.winfo_screenwidth() // 2) - (width // 2)
        y = (self.root.winfo_screenheight() // 2) - (height // 2)
        self.root.geometry(f'{width}x{height}+{x}+{y}')

    def create_loading_screen(self):
        """–°–æ–∑–¥–∞–µ—Ç —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏"""
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
        main_frame = tk.Frame(self.root, bg='#000000')
        main_frame.pack(fill='both', expand=True, padx=20, pady=20)
        
        # –õ–æ–≥–æ—Ç–∏–ø
        logo_label = tk.Label(
            main_frame,
            text="üé¥",
            font=('Arial', 48),
            bg='#000000',
            fg='#FFFFFF'
        )
        logo_label.pack(pady=20)
        
        # –ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã
        title_label = tk.Label(
            main_frame,
            text="–ö–ê–†–¢–û–ß–ù–´–ô –î–£–†–ê–ö",
            font=('Arial', 24, 'bold'),
            bg='#000000',
            fg='#00FF00'
        )
        title_label.pack(pady=10)
        
        # –í–µ—Ä—Å–∏—è
        version_label = tk.Label(
            main_frame,
            text="–§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø",
            font=('Arial', 12),
            bg='#000000',
            fg='#888888'
        )
        version_label.pack(pady=5)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.progress = ttk.Progressbar(
            main_frame,
            orient='horizontal',
            length=400,
            mode='determinate'
        )
        self.progress.pack(pady=30)
        
        # –¢–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏
        self.loading_label = tk.Label(
            main_frame,
            text="–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É...",
            font=('Arial', 11),
            bg='#000000',
            fg='#CCCCCC'
        )
        self.loading_label.pack(pady=10)
        
        # –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏
        self.percent_label = tk.Label(
            main_frame,
            text="0%",
            font=('Arial', 12, 'bold'),
            bg='#000000',
            fg='#00FF00'
        )
        self.percent_label.pack(pady=5)
        
        # –°—Ç–∏–ª—å –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
        style = ttk.Style()
        style.theme_use('clam')
        style.configure("Horizontal.TProgressbar",
                       background='#00FF00',
                       troughcolor='#333333',
                       borderwidth=0,
                       lightcolor='#00FF00',
                       darkcolor='#00FF00')

    def update_progress(self, value, text):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏"""
        self.progress['value'] = value
        self.percent_label['text'] = f"{int(value)}%"
        self.loading_label['text'] = text
        self.root.update()

    def fake_loading(self):
        """–§–µ–π–∫–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
        loading_steps = [
            (10, "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞..."),
            (25, "–ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤..."),
            (40, "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è..."),
            (55, "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞..."),
            (70, "–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–ª–æ–¥—ã –∫–∞—Ä—Ç..."),
            (85, "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç—É—Ä..."),
            (95, "–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞..."),
            (100, "–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã!")
        ]
        
        for progress, text in loading_steps:
            self.update_progress(progress, text)
            # –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –æ—Ç 0.5 –¥–æ 2 —Å–µ–∫—É–Ω–¥
            time.sleep(random.uniform(0.5, 2.0))

class GameLauncher:
    def __init__(self):
        self.root = tk.Tk()
        self.loading_screen = LoadingScreen(self.root)
        
    def launch(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã"""
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–µ–π–∫–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É
        self.loading_screen.fake_loading()
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –∑–∞–≥—Ä—É–∑–∫–∏
        self.root.destroy()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω—é
        self.launch_menu()
    
    def launch_menu(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        try:
            if os.path.exists('menu.py'):
                print("üöÄ –ó–∞–ø—É—Å–∫ –º–µ–Ω—é –∏–≥—Ä—ã...")
                subprocess.run([sys.executable, 'menu.py'])
            else:
                self.show_error("–§–∞–π–ª –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        except Exception as e:
            self.show_error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–µ–Ω—é: {e}")
    
    def launch_game_directly(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É –Ω–∞–ø—Ä—è–º—É—é (–±–µ–∑ –º–µ–Ω—é)"""
        try:
            if os.path.exists('card_game.py'):
                print("üöÄ –ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã...")
                subprocess.run([sys.executable, 'card_game.py'])
            else:
                self.show_error("–§–∞–π–ª –∏–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        except Exception as e:
            self.show_error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É: {e}")
    
    def show_error(self, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        error_root = tk.Tk()
        error_root.withdraw()
        tk.messagebox.showerror("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞", message)
        error_root.destroy()

def quick_launch():
    """–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"""
    root = tk.Tk()
    root.withdraw()
    
    choice = tk.messagebox.askyesno(
        "–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫", 
        "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º? (–î–∞)\n\n–ò–ª–∏ –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫? (–ù–µ—Ç)"
    )
    
    launcher = GameLauncher()
    
    if choice:
        launcher.launch()
    else:
        root.destroy()
        launcher.launch_menu()

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1 and sys.argv[1] == '--quick':
        quick_launch()
    else:
        # –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º
        launcher = GameLauncher()
        launcher.launch()